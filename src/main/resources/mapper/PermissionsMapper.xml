<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ex.store.sys.mapper.PermissionsMapper">
    <resultMap id="BaseResultMap" type="com.ex.store.core.pojo.ExSysRole">
        <id column="ID" property="id" jdbcType="INTEGER"/>
        <result column="NAME" property="name" jdbcType="VARCHAR"/>
        <result column="ROLENAME" property="rolename" jdbcType="VARCHAR"/>
        <result column="DESC" property="desc" jdbcType="VARCHAR"/>
        <result column="ISFORBID" property="isForbid" jdbcType="INTEGER"/>
        <result column="TYPE" property="type" jdbcType="INTEGER"/>
    </resultMap>


    <select id="findPermissionsListByPage" resultType="com.ex.store.core.pojo.ExSysRole"
            parameterType="com.ex.store.core.vo.PageParameter">
        select id,name,rolename,`desc`,isForbid,type from ex_sys_role
        <where>
            1 = 1
            <if test="parameter.name != null and parameter.name != ''">
                and name LIKE concat('%',#{parameter.name,jdbcType=VARCHAR},'%')
            </if>
            <if test="parameter.isForbid != null and parameter.isForbid != ''">
                and isForbid = #{parameter.isForbid,jdbcType=INTEGER}
            </if>
            <if test="parameter.type != null and parameter.type != ''">
                and type = #{parameter.type,jdbcType=INTEGER}
            </if>
            <if test="parameter.rolename != null and parameter.rolename != ''">
                and rolename LIKE concat('%',#{parameter.rolename,jdbcType=VARCHAR},'%')
            </if>
        </where>
        limit ${(page - 1) * limit} , #{limit}
    </select>

    <select id="findPermissionsCount" resultType="Integer" parameterType="com.ex.store.core.vo.PageParameter">
        select count(1) from ex_sys_role
        <where>
            1 = 1
            <if test="parameter.name != null and parameter.name != ''">
                and name LIKE concat('%',#{parameter.name,jdbcType=VARCHAR},'%')
            </if>
            <if test="parameter.isForbid != null and parameter.isForbid != ''">
                and isForbid = #{parameter.isForbid,jdbcType=INTEGER}
            </if>
            <if test="parameter.type != null and parameter.type != ''">
                and type = #{parameter.type,jdbcType=INTEGER}
            </if>
            <if test="parameter.rolename != null and parameter.rolename != ''">
                and rolename LIKE concat('%',#{parameter.rolename,jdbcType=VARCHAR},'%')
            </if>
        </where>
    </select>

    <select id="getPermissions" parameterType="Long" resultType="java.util.Map">
        select menu.id,menu.title from ex_sys_menu menu , ex_sys_role_resource role where role.roleid = #{id,jdbcType=INTEGER} and menu.id = role.resourceid
    </select>

    <update id="saveRoles" parameterType="java.util.List">
        <foreach collection="list" index="index" item="item" separator=";">
            update ex_sys_role
            <set>
                <if test="item.name != null and item.name != ''">
                    name = #{item.name,jdbcType=VARCHAR},
                </if>
                <if test="item.rolename != null and item.rolename != ''">
                    rolename = #{item.rolename,jdbcType=VARCHAR},
                </if>
                <if test="item.desc != null and item.desc != ''">
                    `desc` = #{item.desc,jdbcType=VARCHAR},
                </if>
                <if test="item.type != null and item.type != ''">
                    type = #{item.type,jdbcType=INTEGER},
                </if>
                <if test="item.isForbid != null and item.isForbid != ''">
                    isForbid = #{item.isForbid,jdbcType=INTEGER},
                </if>
            </set>
            <where>
                id = #{item.id,jdbcType=INTEGER}
            </where>
        </foreach>
    </update>

    <insert id="insertRole" parameterType="com.ex.store.core.dto.RoleAndResource" keyProperty="id"
            useGeneratedKeys="true">
        INSERT INTO `ex_sys_role`(`name`, `rolename`, `desc`, `type`, `isForbid`) VALUES (#{name,jdbcType=VARCHAR}, #{rolename,jdbcType=VARCHAR}, #{desc,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, #{isForbid,jdbcType=INTEGER});
    </insert>

    <update id="updateRoleResource" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" separator=";">
            update ex_sys_role_resource
            <set>
                <if test="item.roleid != null and item.roleid != ''">
                    roleid = #{item.roleid,jdbcType=INTEGER},
                </if>
                <if test="item.roleid != null and item.roleid != ''">
                    resourceid = #{item.resourceid,jdbcType=INTEGER},
                </if>
            </set>
            where id = #{item.id,jdbcType=INTEGER}
        </foreach>
    </update>

    <select id="findByRoleid" parameterType="com.ex.store.core.pojo.ExSysRoleResource"
            resultType="com.ex.store.core.pojo.ExSysRoleResource">
        select id,roleid,resourceid from ex_sys_role_resource
        <where>
            1=1
            <if test="roleid != null and roleid != ''">
                and roleid = #{roleid,jdbcType=INTEGER}
            </if>
            <if test="resourceid != null and resourceid != ''">
                and resourceid = #{resourceid,jdbcType=INTEGER}
            </if>
        </where>
    </select>

    <insert id="saveRoleResource" parameterType="java.util.List">
        insert into ex_sys_role_resource (`roleid`,`resourceid`) values
        <foreach collection="list" index="index" item="item" separator=",">
             (#{item.roleid,jdbcType=INTEGER},#{item.resourceid,jdbcType=INTEGER})
        </foreach>
    </insert>

    <delete id="deletRoleResource" parameterType="com.ex.store.core.pojo.ExSysRoleResource">
        delete from ex_sys_role_resource
        <where>
            1=1
            <if test="id != null and id != ''">
                and id = #{id,jdbcType=INTEGER}
            </if>
            <if test="roleid != null and roleid != ''">
                and roleid = #{roleid,jdbcType=INTEGER}
            </if>
            <if test="id != null and id != ''">
                and resourceid = #{resourceid,jdbcType=INTEGER}
            </if>
        </where>
    </delete>

</mapper>