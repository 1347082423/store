<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ex.store.sys.mapper.UserMapper">


    <select id="findUserListByPage" parameterType="com.ex.store.core.vo.PageParameter"
            resultType="com.ex.store.core.dto.UserDto">
        select `name`, `id`, `loginname` as username, `password`, `phone`, `address`, `email`, `isForbid` from
        ex_sys_user
        <where>
            1=1
            <if test="parameter.name != null and parameter.name != ''">
                and name LIKE concat('%',#{parameter.name,jdbcType=VARCHAR},'%')
            </if>
            <if test="parameter.username != null and parameter.username != ''">
                and 'loginname' = #{parameter.username,jdbcType=VARCHAR}
            </if>
            <if test="parameter.phone != null and parameter.phone != ''">
                and 'phone' = #{parameter.phone,jdbcType=VARCHAR}
            </if>
            <if test="parameter.address != null and parameter.address != ''">
                and 'address' = #{parameter.address,jdbcType=VARCHAR}
            </if>
            <if test="parameter.email != null and parameter.email != ''">
                and 'email' = #{parameter.email,jdbcType=VARCHAR}
            </if>
        </where>
        limit ${(page - 1) * limit} , #{limit}
    </select>

    <select id="findUserPageCount" resultType="Integer" parameterType="com.ex.store.core.vo.PageParameter">
        select count(0) from ex_sys_user
        <where>
            1=1
            <if test="parameter.name != null and parameter.name != ''">
                and name LIKE concat('%',#{parameter.name,jdbcType=VARCHAR},'%')
            </if>
            <if test="parameter.username != null and parameter.username != ''">
                and 'loginname' = #{parameter.username,jdbcType=VARCHAR}
            </if>
            <if test="parameter.phone != null and parameter.phone != ''">
                and 'phone' = #{parameter.phone,jdbcType=VARCHAR}
            </if>
            <if test="parameter.address != null and parameter.address != ''">
                and 'address' = #{parameter.address,jdbcType=VARCHAR}
            </if>
            <if test="parameter.email != null and parameter.email != ''">
                and 'email' = #{parameter.email,jdbcType=VARCHAR}
            </if>
        </where>
    </select>

    <select id="loadGroupByUserId" parameterType="Long" resultType="java.util.Map">
        select exgroup.`id`, exgroup.`name`, exgroup.`groupfunction` from ex_sys_group exgroup,ex_sys_user_group exuser where exuser.groupid = exgroup.id and exuser.userid = #{id,jdbcType = INTEGER}
    </select>

    <update id="updateUserByList" parameterType="java.util.List">
        <foreach collection="list" separator=";" item="item" index="index">
            update ex_sys_user
            <set>
                <if test="item.name != null and item.name != ''">
                    name = #{item.name,jdbcType=VARCHAR},
                </if>
                <if test="item.username != null and item.username != ''">
                    loginname = #{item.username,jdbcType=VARCHAR},
                </if>
                <if test="item.password != null and item.password != ''">
                    password = #{item.password,jdbcType=VARCHAR},
                </if>
                <if test="item.phone != null and item.phone != ''">
                    phone = #{item.phone,jdbcType=VARCHAR},
                </if>
                <if test="item.address != null and item.address != ''">
                    address = #{item.address,jdbcType=VARCHAR},
                </if>
                <if test="item.email != null and item.email != ''">
                    email = #{item.email,jdbcType=VARCHAR},
                </if>
                <if test="item.isForbid != null and item.isForbid != ''">
                    isForbid = #{item.isForbid,jdbcType=INTEGER},
                </if>
            </set>
            where id = #{item.id,jdbcType=INTEGER}
        </foreach>
    </update>

    <insert id="insertUser" parameterType="com.ex.store.core.pojo.ExSysUser" keyProperty="id" useGeneratedKeys="true">
        insert into ex_sys_user (`name`, `loginname`, `password`, `phone`, `address`, `email`, `isForbid`) values (
        #{name,jdbcType=VARCHAR},#{username,jdbcType=VARCHAR},#{password,jdbcType=VARCHAR},#{phone,jdbcType=VARCHAR},#{address,jdbcType=VARCHAR},
        #{email,jdbcType=VARCHAR},#{isForbid,jdbcType=INTEGER}
        )
    </insert>

</mapper>